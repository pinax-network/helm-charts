# Default values for substreams sink noop.
# This is a YAML-formatted file.

# Override the name of the chart
nameOverride: ""
fullnameOverride: ""

image:
  # -- Repository for the blockmeta service image
  repository: ghcr.io/streamingfast/substreams-sink-noop
  # -- Image pull policy (e.g., Always, IfNotPresent, Never)
  pullPolicy: IfNotPresent
  # -- Overrides the image tag (default: Chart.appVersion)
  tag: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  #    If not set and `create` is true, a name is generated using the fullname template.
  name: ""

substreams_sink_noop:

  # -- Number of pod replicas for substreams sink noop
  replicaCount: 1

  config:
    # -- The endpoint to connect to the network, defaults to mainnet.eth.streamingfast.io:443
    endpoint: {}

    # -- The URL of the manifest file, defaults to https://github.com/streamingfast/substreams-eth-block-meta/releases/download/v0.4.1/substreams-eth-block-meta-v0.4.1.spkg
    manifest: {}

    # -- The name of the module to use from the manifest, defaults to graph_out
    module: {}

  # -- Specify additional command-line arguments to pass to the `tier-1` component.
  # These arguments can be used to override default settings or provide additional
  # configurations that are not covered by the standard configuration options.  
  extraArgs: {}

  # -- PersistentVolumeClaimSpec for state cursor
  volumeClaimSpec:
    enabled: false
    accessModes: ["ReadWriteOnce"]
    # -- The storage class to use when provisioning a persistent volume
    storageClassName: ""
    resources:
      requests:
        # -- The amount of disk space to provision
        storage: 1Gi

  # -- Resource limits and requests for the container (required for HPA to function)
  resources: {}
    # Example to set only limits:
    # limits:
    #   cpu: 1000m          # Maximum CPU cores the container can use
    #   memory: 2Gi         # Maximum memory the container can use

    # Example to set both limits and requests:
    # limits:
    #   cpu: 1000m
    #   memory: 2Gi
    # requests:
    #   cpu: 500m           # CPU cores to reserve (used for HPA calculations)
    #   memory: 1Gi         # Memory to reserve (used for HPA calculations)


  service:
    # -- Type of Kubernetes service (e.g., ClusterIP, NodePort, LoadBalancer)
    type: ClusterIP
    ports:
      # -- Port for gRPC communication
      grpc: 8080
      # -- Port for metrics
      metrics: 9102

    # -- Set the IP family policy for the service
    # Options:
    # - SingleStack (IPv4 or IPv6)
    # - PreferDualStack (Prefers dual-stack but may use single-stack)
    # - RequireDualStack (Must use both IPv4 and IPv6)
    ipFamilyPolicy: "SingleStack"

    # -- Set the IP families to use (e.g., ["IPv4", "IPv6"])
    ipFamilies:
      - "IPv4"

  serviceMonitor:
    # -- Enable or disable the service monitor
    enabled: false

    # -- Interval at which Prometheus scrapes metrics
    interval: 30s 

    # -- Timeout for the scrape request
    scrapeTimeout: 10s 
    
    # -- Additional annotations for the ServiceMonitor resource
    annotations: {}
      # prometheus.io/scrape: "true"
      # prometheus.io/port: "9102"
    
    # -- Additional labels for the ServiceMonitor resource
    labels: {}
      # release: prometheus
      
    # -- Configure metrics path
    path: /metrics
    
    # -- Honor labels from scraped metrics
    honorLabels: false
    
    # -- Relabeling configurations for the ServiceMonitor
    relabelings: []
      # - action: replace
      #   sourceLabels: [__meta_kubernetes_pod_label_app]
      #   targetLabel: app

  ingress:
    # -- Enable or disable ingress
    enabled: false

    # -- Hostname for the ingress
    host: "example.domain.com"  # Replace with your actual domain

    # -- Ingress class configuration (K8s 1.19+)
    ingressClassName: "nginx"  # Set to your preferred ingress controller

    paths:
      # -- Default path mapping for ingress
      default: "/"
      # -- Add additional path mappings if needed
      # api: "/api"

    # TLS configuration
    tls:
      # -- Enable TLS (HTTPS) for ingress
      enabled: false  # Set to true to enable HTTPS
      # -- Name of the TLS secret (leave empty for auto-generation)
      secretName: ""  

    # Additional ingress annotations
    annotations: {}
      # -- Add custom annotations for ingress, e.g.:
      # nginx.ingress.kubernetes.io/rewrite-target: "/"
      # cert-manager.io/cluster-issuer: "letsencrypt-prod"

  # -- Pod-wide security context settings
  podSecurityContext:
    # -- Run the pod as a non-root user (recommended for security)
    runAsNonRoot: false
    # -- (Optional) User ID to run the container
    # runAsUser: 101337
    # -- (Optional) Group ID for the container process
    # runAsGroup: 101337
    # -- (Optional) Filesystem group for container
    # fsGroup: 101337

  # -- Grace period for pod termination (in seconds)
  terminationGracePeriodSeconds: 60