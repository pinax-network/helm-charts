nameOverride: ""
fullnameOverride: ""

# chain and type of substreams-sink
sinkType: ""
chain: ""

replicaCount: 1

image:
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent

# pull secrets required to fetch the image
imagePullSecrets: []

# arguments to the command to run at the start of the container
args: []

# resources used by the pod(s)
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi


# environment variables to be use by the applications <key>: <value>
env:
  port: 3000
  # substreams_endpoint: ""
  # manifest: ""
  # module_name: ""
  # start_block: ""
  # stop_block: ""
  # cursor_file: "/cursor/cursor.lock"

# secret to use or create
secret:
  # secretName is the name of the secret to use. Leave empty to use no secret
  secretName: ""
  # true to create the secret and fill it with following values
  # false if the secret to use is created elsewhere
  create: false
  # each of these values should come from a sealed secret and be encrypted
  secrets:
    # substreams_api_key: ""
    # database: ""
    # username: ""
    # password: ""

initContainer:
  enabled: false
  image: ""
  tag: ""
  script: |

livenessProbe:
  enabled: false
  path: /health
  initialDelaySeconds: 20
  timeoutSeconds: 2
  periodSeconds: 5

service:
  type: ClusterIP
  port: 3000

serviceMonitors:
  # enable monitoring by creating `ServiceMonitor` CRDs ([prometheus-operator](https://github.com/prometheus-operator/prometheus-operator))
  enabled: false
  labels: {}
  interval:
  scrapeTimeout:
  relabelings: []

# path to mount the pvc as a volume if the pvc is enabled. Adjust the cursor_file env variable accordingly
volumeMountPath: /cursor

# pvc is used to persist the cursor.lock file
pvc:
  # if true, make sure the volumeMountPath and the cursor_file match
  enabled: false
  storageClassName: ""
  accessModes: [ReadWriteOnce]
  storage: 1Gi